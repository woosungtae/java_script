/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2023-03-10 00:37:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/tiles-jsp-2.2.2.jar", Long.valueOf(1655775970791L));
    _jspx_dependants.put("jar:file:/C:/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/bookShop01/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1655775966109L));
    _jspx_dependants.put("jar:file:/C:/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/bookShop01/WEB-INF/lib/tiles-jsp-2.2.2.jar!/META-INF/tld/tiles-jsp.tld", Long.valueOf(1276606224000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function execDaumPostcode() {\r\n");
      out.write("  new daum.Postcode({\r\n");
      out.write("    oncomplete: function(data) {\r\n");
      out.write("      // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("      // 도로명 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("      // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("      var fullRoadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("      var extraRoadAddr = ''; // 도로명 조합형 주소 변수\r\n");
      out.write("\r\n");
      out.write("      // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("      // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("      if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("        extraRoadAddr += data.bname;\r\n");
      out.write("      }\r\n");
      out.write("      // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("      if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("        extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("      }\r\n");
      out.write("      // 도로명, 지번 조합형 주소가 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("      if(extraRoadAddr !== ''){\r\n");
      out.write("        extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("      }\r\n");
      out.write("      // 도로명, 지번 주소의 유무에 따라 해당 조합형 주소를 추가한다.\r\n");
      out.write("      if(fullRoadAddr !== ''){\r\n");
      out.write("        fullRoadAddr += extraRoadAddr;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("      document.getElementById('zipcode').value = data.zonecode; //5자리 새우편번호 사용\r\n");
      out.write("      document.getElementById('roadAddress').value = fullRoadAddr;\r\n");
      out.write("      document.getElementById('jibunAddress').value = data.jibunAddress;\r\n");
      out.write("\r\n");
      out.write("      // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.\r\n");
      out.write("      if(data.autoRoadAddress) {\r\n");
      out.write("        //예상되는 도로명 주소에 조합형 주소를 추가한다.\r\n");
      out.write("        var expRoadAddr = data.autoRoadAddress + extraRoadAddr;\r\n");
      out.write("        document.getElementById('guide').innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';\r\n");
      out.write("\r\n");
      out.write("      } else if(data.autoJibunAddress) {\r\n");
      out.write("          var expJibunAddr = data.autoJibunAddress;\r\n");
      out.write("          document.getElementById('guide').innerHTML = '(예상 지번 주소 : ' + expJibunAddr + ')';\r\n");
      out.write("      } else {\r\n");
      out.write("          document.getElementById('guide').innerHTML = '';\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("     \r\n");
      out.write("    }\r\n");
      out.write("  }).open();\r\n");
      out.write("}\r\n");
      out.write("var Checked = 0;\r\n");
      out.write("\r\n");
      out.write("function fn_overlapped(){\r\n");
      out.write("    var _id=$(\"#_member_id\").val();\r\n");
      out.write("    if(_id==''){\r\n");
      out.write("       alert(\"ID를 입력하세요\");\r\n");
      out.write("       return;\r\n");
      out.write("    }\r\n");
      out.write("    $.ajax({\r\n");
      out.write("       type:\"post\",\r\n");
      out.write("       async:false,  \r\n");
      out.write("       url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/overlapped.do\",\r\n");
      out.write("       dataType:\"text\",\r\n");
      out.write("       data: {id:_id},\r\n");
      out.write("       success:function (data,textStatus){\r\n");
      out.write("          if(data!=_id){\r\n");
      out.write("              alert(\"사용할 수 있는 ID입니다.\");\r\n");
      out.write("              $('#btnOverlapped').prop(\"disabled\", true);\r\n");
      out.write("              $('#_member_id').prop(\"disabled\", true);\r\n");
      out.write("              $('#member_id').val(_id);\r\n");
      out.write("             Checked=1;\r\n");
      out.write("          }else{\r\n");
      out.write("             alert(\"사용할 수 없는 ID입니다.\");\r\n");
      out.write("          }\r\n");
      out.write("       },\r\n");
      out.write("       error:function(data,textStatus){\r\n");
      out.write("        //  alert(\"에러가 발생했습니다.\");ㅣ\r\n");
      out.write("       },\r\n");
      out.write("       complete:function(data,textStatus){\r\n");
      out.write("        //  alert(\"작업을완료 했습니다\");\r\n");
      out.write("       }\r\n");
      out.write("    });  //end ajax    \r\n");
      out.write(" }   \r\n");
      out.write(" \r\n");
      out.write(" function fn_check(obj) {\r\n");
      out.write("    if(Checked==0){\r\n");
      out.write("      alert('중복체크하세요!');\r\n");
      out.write("   } else {\r\n");
      out.write("      obj.submit();\r\n");
      out.write("   } \r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"middle\">\r\n");
      out.write("	<img width=\"600px\" height=\"200px\" class=\"logo\" alt=\"booktopia\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/image/loginForm.png\">\r\n");
      out.write("	<form method=\"post\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/addMember.do\">\r\n");
      out.write("		<table class=\"member\">\r\n");
      out.write("			<tr class=\"field\">\r\n");
      out.write("		        <th><b>아이디</b><span class=\"placehold-text\"></span></th>\r\n");
      out.write("		        <td><input type=\"text\" name=\"member_id\"></td>\r\n");
      out.write("		        <td><input type=\"button\" value=\"중복확인\" onClick=\"fn_overlapped()\"></td>\r\n");
      out.write("		    </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("		            <th><b>비밀번호</b></th>\r\n");
      out.write("		            <td><input type=\"password\" name=\"member_pwd\"></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("		            <th><b>이름</b></th>\r\n");
      out.write("		            <td><input type=\"text\" name=\"member_name\"></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("		            <th><b>닉네임</b></th>\r\n");
      out.write("		            <td><input type=\"text\" name=\"member_nickName\"></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("		            <th><b>주민등록번호</b></th>\r\n");
      out.write("		            <td><input type=\"text\" name=\"member_jumin1\">&nbsp;-&nbsp;</td>\r\n");
      out.write("		            <td><input type=\"password\"name=\"member_jumin2\"></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("		            <th><b>이메일</b></th>\r\n");
      out.write("		            <td><input type=\"email\" name=\"member_email\"></td>\r\n");
      out.write("		            <td><input type=\"button\" value=\"인증\"></td>\r\n");
      out.write("		            <td><p style=\"text-align: left;\">미인증</p></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("		        	<td></td>\r\n");
      out.write("		            <td>\r\n");
      out.write("		            	<input id=\"agree\" type=\"checkbox\">\r\n");
      out.write("  						<label for=\"agree\">\r\n");
      out.write("		    			<span>AA에서 발송하는 email을 수신합니다.</span>\r\n");
      out.write("		 				</label>\r\n");
      out.write(" 					</td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("	            <tr class=\"field\">\r\n");
      out.write("	            	<th><b>인증번호입력</b></th>\r\n");
      out.write("	            	<td><input type=\"text\" name=\"member_key\" placeholder=\"인증번호를 입력하세요\"></td>\r\n");
      out.write("	            	<td><input type=\"button\" value=\"확인\"></td>\r\n");
      out.write("	            </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("		            <th><b>휴대전화</b></th>\r\n");
      out.write("		            <td><input type=\"tel\" name=\"member_phone\" placeholder=\"하이픈(-) 없이 입력하세요\"></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("				<tr class=\"field\">\r\n");
      out.write("		            <th><b>주소</b></th>\r\n");
      out.write("		            <td><input type=\"text\"></td>\r\n");
      out.write("		            <td><input type=\"button\" value=\"우편번호 검색\"></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("		        <td></td>\r\n");
      out.write("		        <td><input type=\"text\" name=\"member_address1\" placeholder=\"주소\"></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("		        <td></td>\r\n");
      out.write("		        <td><input type=\"text\" name=\"member_address2\" placeholder=\"상세 주소\"></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr class=\"field\">\r\n");
      out.write("			        <td><input type=\"submit\" value=\"취소하기\"></td>\r\n");
      out.write("			        <td><input type=\"submit\" value=\"회원가입\"></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("	        </table>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/member/memberForm.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/member/memberForm.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/memberForm.jsp(6,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
